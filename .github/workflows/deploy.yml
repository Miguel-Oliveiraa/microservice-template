name: Deploy

on:
  push:
    branches:
      - main

jobs:
  Deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup SSH
        id: ssh-setup
        run: |
          echo "${{ secrets.AWS_EC2_SSH_KEY }}" > private_key
          chmod 600 private_key

      - name: Remove old files
        env:
          HOSTNAME: ${{ secrets.AWS_EC2_IP }}
          USER_NAME: ${{ secrets.USER_NAME }}
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key ${{ env.USER_NAME }}@${{ env.HOSTNAME }} '
            rm -rf /home/ubuntu/node-app/microservice-template/*
          '

      - name: Copy new files
        env:
          HOSTNAME: ${{ secrets.AWS_EC2_IP }}
          USER_NAME: ${{ secrets.USER_NAME }}
        run: |
          scp -o StrictHostKeyChecking=no -i private_key -r ./* ${{ env.USER_NAME }}@${{ env.HOSTNAME }}:/home/ubuntu/node-app/microservice-template

      - name: Deploy
        env:
          HOSTNAME: ${{ secrets.AWS_EC2_IP }}
          USER_NAME: ${{ secrets.USER_NAME }}
          DATABASE_URL: postgres://${{ secrets.RDS_USER }}:${{ secrets.RDS_PASSWORD }}@${{ secrets.RDS_ENDPOINT }}:5432/${{ secrets.RDS_DB_NAME }}
          PORT: ${{ secrets.APP_PORT }}
        run: |
          ssh -o StrictHostKeyChecking=no -i private_key ${{ env.USER_NAME }}@${{ env.HOSTNAME }} '
            cd /home/ubuntu/node-app/microservice-template/
            sudo docker compose --profile deploy up --build -d
            rm -rf /home/ubuntu/node-app/microservice-template/*
          '
