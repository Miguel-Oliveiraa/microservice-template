services:
  postgresdb:
    restart: always
    image: postgres:latest
    container_name: postgresdb
    profiles:
      - full
      - db-only
    environment:
      POSTGRES_DB: '${POSTGRES_DB}'
      POSTGRES_USER: '${POSTGRES_USER}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
    hostname: postgresdb
    ports:
      - '${POSTGRES_PORT}:5432'
    networks:
      - development_net
    healthcheck:
      test:
        [
          'CMD-SHELL',
          'pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB} -h localhost',
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: myapp
    profiles:
      - full
    ports:
      - '3000:3000'
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgresdb:${POSTGRES_PORT}/${POSTGRES_DB}
    depends_on:
      postgresdb:
        condition: service_healthy
    networks:
      - development_net

  deploy:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: production-app
    profiles:
      - deploy
    ports:
      - '${PORT}:${PORT}'
    environment:
      PORT: ${PORT}
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
    networks:
      - development_net

networks:
  development_net:
    driver: bridge
